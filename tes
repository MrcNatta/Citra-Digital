import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QPushButton, QVBoxLayout, QWidget, QFileDialog, QDialog, QGridLayout, QSpinBox
from PyQt5.QtGui import QPixmap
from PIL import Image

class CropDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Crop Settings")
        
        layout = QGridLayout()

        self.left_spinbox = QSpinBox(self)
        self.left_spinbox.setValue(0)
        layout.addWidget(QLabel("Left:"), 0, 0)
        layout.addWidget(self.left_spinbox, 0, 1)

        self.top_spinbox = QSpinBox(self)
        self.top_spinbox.setValue(0)
        layout.addWidget(QLabel("Top:"), 1, 0)
        layout.addWidget(self.top_spinbox, 1, 1)

        self.right_spinbox = QSpinBox(self)
        layout.addWidget(QLabel("Right:"), 2, 0)
        layout.addWidget(self.right_spinbox, 2, 1)

        self.bottom_spinbox = QSpinBox(self)
        layout.addWidget(QLabel("Bottom:"), 3, 0)
        layout.addWidget(self.bottom_spinbox, 3, 1)

        self.crop_button = QPushButton("Crop", self)
        self.crop_button.clicked.connect(self.accept)
        layout.addWidget(self.crop_button, 4, 0, 1, 2)

        self.setLayout(layout)

    def get_crop_values(self):
        return (self.left_spinbox.value(), self.top_spinbox.value(), self.right_spinbox.value(), self.bottom_spinbox.value())

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Image Cropper")
        self.setGeometry(100, 100, 600, 400)

        self.image_label = QLabel(self)
        self.setCentralWidget(self.image_label)

        self.load_button = QPushButton("Open Image", self)
        self.load_button.clicked.connect(self.load_image)

        self.crop_button = QPushButton("Crop Image", self)
        self.crop_button.clicked.connect(self.crop_image)

        self.statusBar()

        toolbar = self.addToolBar("Main Toolbar")
        toolbar.addWidget(self.load_button)
        toolbar.addWidget(self.crop_button)

        self.image = None

    def load_image(self):
        file_path, _ = QFileDialog.getOpenFileName(self, "Open Image", "", "Image Files (*.png *.jpg *.jpeg *.bmp)")
        if file_path:
            self.image = Image.open(file_path)
            pixmap = QPixmap.fromImage(self.convert_pil_to_qimage(self.image))
            self.image_label.setPixmap(pixmap)
            self.image_label.resize(pixmap.width(), pixmap.height())
            self.statusBar().showMessage("Image loaded successfully.")

    def crop_image(self):
        if self.image:
            crop_dialog = CropDialog(self)
            if crop_dialog.exec_():
                left, top, right, bottom = crop_dialog.get_crop_values()
                cropped_image = self.image.crop((left, top, self.image.width - right, self.image.height - bottom))
                pixmap = QPixmap.fromImage(ImageQt.ImageQt(cropped_image))
                self.image_label.setPixmap(pixmap)
                self.image_label.resize(pixmap.width(), pixmap.height())
                self.statusBar().showMessage("Image cropped successfully.")

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
